import { z } from "zod";

const MetadataSchema = z.object({
    tags: z.string().optional().nullable(),
    prompt: z.string(),
    concat_history: z.array(z.any()).optional(),
    type: z.string(),
    duration: z.number(),
    persona_id: z.string().optional(),
    video_upload_width: z.number().optional(),
    video_upload_height: z.number().optional(),
    edit_session_id: z.string().optional(),
    can_remix: z.boolean().optional(),
    is_remix: z.boolean().optional(),
    has_vocal: z.boolean().optional(),
    refund_credits: z.boolean().optional(),
    stream: z.boolean().optional(),
    priority: z.number().optional(),
    is_audio_upload_tos_accepted: z.boolean().optional(),
    gpt_description_prompt: z.string().optional(),
    cover_clip_id: z.string().optional(),
    upsample_clip_id: z.string().optional(),
    task: z.string().optional(),
    free_quota_category: z.string().optional(),
});

const PersonaSchema = z.object({
    id: z.string(),
    name: z.string(),
    image_s3_id: z.string().url(),
    root_clip_id: z.string(),
    user_handle: z.string(),
    user_display_name: z.string(),
    user_image_url: z.string(),
    is_owned: z.boolean(),
    is_public: z.boolean(),
    is_trashed: z.boolean(),
});

const ItemSchema = z.object({
    id: z.string(),
    entity_type: z.string(),
    video_url: z.string().optional(),
    video_cover_url: z.string().optional(),
    preview_url: z.string().optional(),
    audio_url: z.string(),
    image_url: z.string(),
    image_large_url: z.string(),
    major_model_version: z.string().optional(),
    model_name: z.string().optional(),
    metadata: MetadataSchema,
    caption: z.string().optional(),
    is_liked: z.boolean(),
    user_id: z.string(),
    display_name: z.string(),
    handle: z.string(),
    is_handle_updated: z.boolean(),
    avatar_image_url: z.string(),
    is_trashed: z.boolean(),
    explicit: z.boolean(),
    comment_count: z.number(),
    flag_count: z.number(),
    created_at: z.string(),
    status: z.string(),
    title: z.string(),
    play_count: z.number(),
    upvote_count: z.number(),
    is_public: z.boolean(),
    allow_comments: z.boolean(),
    persona: PersonaSchema.optional(),
    display_tags: z.string().optional(),
});

const SectionSchema = z.object({
    title: z.string(),
    id: z.string(),
    options: z.array(z.string()),
    selected_option: z.string(),
    secondary_options: z.array(z.string()),
    secondary_selected_option: z.string(),
    section_name: z.string(),
    style_type: z.string(),
    section_type: z.string(),
    items: z.array(ItemSchema),
    preview_items_count: z.number(),
});

export const TrendingResponseSchema = z.object({
    sections: z.array(SectionSchema),
    page: z.number(),
    total_sections: z.number(),
    page_size: z.number(),
    start_index: z.number(),
});